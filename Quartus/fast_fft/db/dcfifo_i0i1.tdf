--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone III" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=16 LPM_SHOWAHEAD="ON" LPM_WIDTH=32 LPM_WIDTH_R=32 LPM_WIDTHU=4 LPM_WIDTHU_R=4 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=5 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="ON" WRSYNC_DELAYPIPE=5 aclr data q rdclk rdempty rdreq rdusedw wrclk wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone III" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 9.0 cbx_a_gray2bin 2008:05:19:09:32:04:SJ cbx_a_graycounter 2008:05:19:09:39:53:SJ cbx_altdpram 2008:05:19:10:27:12:SJ cbx_altsyncram 2008:11:06:10:05:41:SJ cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_dcfifo 2009:01:16:15:51:00:SJ cbx_fifo_common 2008:05:19:10:54:06:SJ cbx_flex10ke 2008:05:19:10:53:03:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_counter 2008:05:19:10:42:20:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_lpm_mux 2008:05:19:10:30:36:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_scfifo 2008:05:19:10:25:30:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_stratixiii 2008:12:24:11:49:14:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_gray2bin_hfb (gray[4..0])
RETURNS ( bin[4..0]);
FUNCTION a_graycounter_g47 (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION a_graycounter_cic (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION a_graycounter_bic (aclr, clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION altsyncram_ua11 (aclr1, address_a[3..0], address_b[3..0], addressstall_b, clock0, clock1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);
FUNCTION dffpipe_cd9 (clock, clrn, d[4..0])
RETURNS ( q[4..0]);
FUNCTION alt_synch_pipe_ekd (clock, clrn, d[4..0])
RETURNS ( q[4..0]);
FUNCTION dffpipe_9d9 (clock, clrn, d[0..0])
RETURNS ( q[0..0]);
FUNCTION alt_synch_pipe_fkd (clock, clrn, d[4..0])
RETURNS ( q[4..0]);
FUNCTION cmpr_056 (dataa[2..0], datab[2..0])
RETURNS ( aeb);
FUNCTION cmpr_v46 (dataa[1..0], datab[1..0])
RETURNS ( aeb);
FUNCTION mux_a18 (data[1..0], sel[0..0])
RETURNS ( result[0..0]);

--synthesis_resources = lut 28 M9K 1 reg 74 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 3;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=s102;{-to rdemp_eq_comp_lsb_aeb} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;{-to rdemp_eq_comp_lsb_aeb} POWER_UP_LEVEL=HIGH;{-to rdemp_eq_comp_msb_aeb} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;{-to rdemp_eq_comp_msb_aeb} POWER_UP_LEVEL=HIGH;{-to rs_dgwp_reg} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;{-to wrfull_eq_comp_lsb_mux_reg} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;{-to wrfull_eq_comp_msb_mux_reg} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;{-to ws_dgrp_reg} SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS;-name CUT ON -from rdptr_g -to ws_dgrp|dffpipe12|dffe13a;-name SDC_STATEMENT ""set_false_path -from *rdptr_g* -to *ws_dgrp|dffpipe_ed9:dffpipe12|dffe13a* "";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe7|dffe8a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_dd9:dffpipe7|dffe8a* """;

SUBDESIGN dcfifo_i0i1
( 
	aclr	:	input;
	data[31..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	rdusedw[3..0]	:	output;
	wrclk	:	input;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g_gray2bin : a_gray2bin_hfb;
	rs_dgwp_gray2bin : a_gray2bin_hfb;
	rdptr_g1p : a_graycounter_g47;
	wrptr_g1p : a_graycounter_cic;
	wrptr_gp : a_graycounter_bic;
	fifo_ram : altsyncram_ua11;
	delayed_wrptr_g[4..0] : dffe;
	rdemp_eq_comp_lsb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdemp_eq_comp_msb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdptr_g[4..0] : dffe;
	rs_dgwp_reg[4..0] : dffe;
	wrfull_eq_comp_lsb_mux_reg : dffe;
	wrfull_eq_comp_msb_mux_reg : dffe;
	ws_dgrp_reg[4..0] : dffe;
	rs_brp : dffpipe_cd9;
	rs_bwp : dffpipe_cd9;
	rs_dgwp : alt_synch_pipe_ekd;
	wraclr : dffpipe_9d9;
	ws_dgrp : alt_synch_pipe_fkd;
	rdusedw_sub_dataa[4..0]	:	WIRE;
	rdusedw_sub_datab[4..0]	:	WIRE;
	rdusedw_sub_result[4..0]	:	WIRE;
	rdempty_eq_comp1_lsb : cmpr_056;
	rdempty_eq_comp1_msb : cmpr_v46;
	rdempty_eq_comp_lsb : cmpr_056;
	rdempty_eq_comp_msb : cmpr_v46;
	wrfull_eq_comp1_lsb : cmpr_056;
	wrfull_eq_comp1_msb : cmpr_v46;
	wrfull_eq_comp_lsb : cmpr_056;
	wrfull_eq_comp_msb : cmpr_v46;
	rdemp_eq_comp_lsb_mux : mux_a18;
	rdemp_eq_comp_msb_mux : mux_a18;
	wrfull_eq_comp_lsb_mux : mux_a18;
	wrfull_eq_comp_msb_mux : mux_a18;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[3..0]	: WIRE;
	ram_address_b[3..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_g1s[4..0]	: WIRE;
	wrptr_gs[4..0]	: WIRE;

BEGIN 
	rdptr_g_gray2bin.gray[4..0] = rdptr_g[4..0].q;
	rs_dgwp_gray2bin.gray[4..0] = rs_dgwp_reg[4..0].q;
	rdptr_g1p.aclr = aclr;
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = valid_rdreq;
	wrptr_g1p.aclr = (! wraclr.q[]);
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	wrptr_gp.aclr = (! wraclr.q[]);
	wrptr_gp.clock = wrclk;
	wrptr_gp.cnt_en = valid_wrreq;
	fifo_ram.aclr1 = aclr;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_gp.q[];
	rdemp_eq_comp_lsb_aeb.clk = rdclk;
	rdemp_eq_comp_lsb_aeb.d = rdemp_eq_comp_lsb_mux.result[];
	rdemp_eq_comp_lsb_aeb.prn = (! aclr);
	rdemp_eq_comp_msb_aeb.clk = rdclk;
	rdemp_eq_comp_msb_aeb.d = rdemp_eq_comp_msb_mux.result[];
	rdemp_eq_comp_msb_aeb.prn = (! aclr);
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	rs_dgwp_reg[].clk = rdclk;
	rs_dgwp_reg[].clrn = (! aclr);
	rs_dgwp_reg[].d = rs_dgwp.q[];
	wrfull_eq_comp_lsb_mux_reg.clk = wrclk;
	wrfull_eq_comp_lsb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_lsb_mux_reg.d = wrfull_eq_comp_lsb_mux.result[];
	wrfull_eq_comp_msb_mux_reg.clk = wrclk;
	wrfull_eq_comp_msb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_msb_mux_reg.d = wrfull_eq_comp_msb_mux.result[];
	ws_dgrp_reg[].clk = wrclk;
	ws_dgrp_reg[].clrn = (! aclr);
	ws_dgrp_reg[].d = ws_dgrp.q[];
	rs_brp.clock = rdclk;
	rs_brp.clrn = (! aclr);
	rs_brp.d[] = rdptr_g_gray2bin.bin[];
	rs_bwp.clock = rdclk;
	rs_bwp.clrn = (! aclr);
	rs_bwp.d[] = rs_dgwp_gray2bin.bin[];
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	wraclr.clock = wrclk;
	wraclr.clrn = (! aclr);
	wraclr.d[] = B"1";
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdusedw_sub_result[] = rdusedw_sub_dataa[] - rdusedw_sub_datab[];
	rdusedw_sub_dataa[] = rs_bwp.q[];
	rdusedw_sub_datab[] = rs_brp.q[];
	rdempty_eq_comp1_lsb.dataa[2..0] = rs_dgwp.q[2..0];
	rdempty_eq_comp1_lsb.datab[2..0] = rdptr_g1p.q[2..0];
	rdempty_eq_comp1_msb.dataa[1..0] = rs_dgwp.q[4..3];
	rdempty_eq_comp1_msb.datab[1..0] = rdptr_g1p.q[4..3];
	rdempty_eq_comp_lsb.dataa[2..0] = rs_dgwp.q[2..0];
	rdempty_eq_comp_lsb.datab[2..0] = rdptr_g[2..0].q;
	rdempty_eq_comp_msb.dataa[1..0] = rs_dgwp.q[4..3];
	rdempty_eq_comp_msb.datab[1..0] = rdptr_g[4..3].q;
	wrfull_eq_comp1_lsb.dataa[2..0] = ws_dgrp.q[2..0];
	wrfull_eq_comp1_lsb.datab[2..0] = wrptr_g1s[2..0];
	wrfull_eq_comp1_msb.dataa[1..0] = ws_dgrp.q[4..3];
	wrfull_eq_comp1_msb.datab[1..0] = wrptr_g1s[4..3];
	wrfull_eq_comp_lsb.dataa[2..0] = ws_dgrp.q[2..0];
	wrfull_eq_comp_lsb.datab[2..0] = wrptr_gs[2..0];
	wrfull_eq_comp_msb.dataa[1..0] = ws_dgrp.q[4..3];
	wrfull_eq_comp_msb.datab[1..0] = wrptr_gs[4..3];
	rdemp_eq_comp_lsb_mux.data[] = ( rdempty_eq_comp1_lsb.aeb, rdempty_eq_comp_lsb.aeb);
	rdemp_eq_comp_lsb_mux.sel[] = valid_rdreq;
	rdemp_eq_comp_msb_mux.data[] = ( rdempty_eq_comp1_msb.aeb, rdempty_eq_comp_msb.aeb);
	rdemp_eq_comp_msb_mux.sel[] = valid_rdreq;
	wrfull_eq_comp_lsb_mux.data[] = ( wrfull_eq_comp1_lsb.aeb, wrfull_eq_comp_lsb.aeb);
	wrfull_eq_comp_lsb_mux.sel[] = valid_wrreq;
	wrfull_eq_comp_msb_mux.data[] = ( wrfull_eq_comp1_msb.aeb, wrfull_eq_comp_msb.aeb);
	wrfull_eq_comp_msb_mux.sel[] = valid_wrreq;
	int_rdempty = (rdemp_eq_comp_lsb_aeb.q & rdemp_eq_comp_msb_aeb.q);
	int_wrfull = (wrfull_eq_comp_lsb_mux_reg.q & wrfull_eq_comp_msb_mux_reg.q);
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_gp.q[4..4] $ wrptr_gp.q[3..3]), wrptr_gp.q[2..0]);
	ram_address_b[] = ( (rdptr_g1p.q[4..4] $ rdptr_g1p.q[3..3]), rdptr_g1p.q[2..0]);
	rdempty = int_rdempty;
	rdusedw[] = ( rdusedw_sub_result[3..0]);
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! (int_wrfull # (! wraclr.q[]))));
	wrptr_g1s[] = ( (! wrptr_g1p.q[4..4]), (! wrptr_g1p.q[3..3]), wrptr_g1p.q[2..0]);
	wrptr_gs[] = ( (! wrptr_gp.q[4..4]), (! wrptr_gp.q[3..3]), wrptr_gp.q[2..0]);
END;
--VALID FILE
