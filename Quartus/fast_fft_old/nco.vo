//IP Functional Simulation Model
//VERSION_BEGIN 9.0 cbx_mgl 2009:01:29:16:12:07:SJ cbx_simgen 2008:08:06:16:30:59:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Legal Notice: © 2003 Altera Corporation. All rights reserved.
// You may only use these  simulation  model  output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event  Altera disclaims all warranties of any kind). Your use of  Altera
// Corporation's design tools, logic functions and other software and tools,
// and its AMPP partner logic functions, and any output files any of the
// foregoing (including device programming or simulation files), and any
// associated documentation or information  are expressly subject to the
// terms and conditions of the  Altera Program License Subscription Agreement
// or other applicable license agreement, including, without limitation, that
// your use is for the sole purpose of programming logic devices manufactured
// by Altera and sold by Altera or its authorized distributors.  Please refer
// to the applicable agreement for further details.


//synopsys translate_off

//synthesis_resources = altmult_add 2 altsyncram 3 lpm_add_sub 4 lpm_counter 1 lut 122 mux21 220 oper_add 2 
`timescale 1 ps / 1 ps
module  nco
	( 
	clk,
	clken,
	fcos_o,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [15:0]  fcos_o;
	output   [15:0]  fsin_o;
	output   out_valid;
	input   [15:0]  phi_inc_i;
	input   reset_n;

	wire  [32:0]   wire_niO1i_result;
	wire  [32:0]   wire_niO1l_result;
	wire  [15:0]   wire_nilOi_q_a;
	wire  [15:0]   wire_nilOi_q_b;
	wire  [15:0]   wire_nilOl_q_a;
	wire  [15:0]   wire_nilOO_q_a;
	reg	nlOi0i7;
	reg	nlOi0i8;
	reg	nlOi0O5;
	reg	nlOi0O6;
	reg	nlOi1l10;
	reg	nlOi1l9;
	reg	nlOiiO3;
	reg	nlOiiO4;
	reg	nlOiOl1;
	reg	nlOiOl2;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001i;
	reg	n001l;
	reg	n001O;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n01i;
	reg	n01li;
	reg	n01lO;
	reg	n01Oi;
	reg	n01Ol;
	reg	n01OO;
	reg	n0il;
	reg	n0lOO;
	reg	n0O0i;
	reg	n0O0l;
	reg	n0O0O;
	reg	n0O1i;
	reg	n0O1l;
	reg	n0O1O;
	reg	n0Oii;
	reg	n0Oil;
	reg	n0OiO;
	reg	n0Oli;
	reg	n0Oll;
	reg	n0OlO;
	reg	n0OOi;
	reg	n0OOl;
	reg	n0OOO;
	reg	n100i;
	reg	n100l;
	reg	n100O;
	reg	n101O;
	reg	n10ii;
	reg	n10il;
	reg	n10iO;
	reg	n10li;
	reg	n10ll;
	reg	n10lO;
	reg	n10Oi;
	reg	n10Ol;
	reg	n10OO;
	reg	n1i0i;
	reg	n1i0l;
	reg	n1i0O;
	reg	n1i1i;
	reg	n1i1l;
	reg	n1i1O;
	reg	n1iii;
	reg	n1iil;
	reg	ni0iO;
	reg	ni10i;
	reg	ni10l;
	reg	ni10O;
	reg	ni11i;
	reg	ni11l;
	reg	ni11O;
	reg	ni1ii;
	reg	niO0l;
	reg	niO0O;
	reg	niOii;
	reg	niOil;
	reg	niOiO;
	reg	niOli;
	reg	niOll;
	reg	niOlO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl10i;
	reg	nl10l;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nliiO;
	reg	nlilO;
	reg	nliOi;
	reg	nliOl;
	reg	nliOO;
	reg	nll0i;
	reg	nll0l;
	reg	nll0O;
	reg	nll1i;
	reg	nll1l;
	reg	nll1O;
	reg	nllii;
	reg	nllil;
	reg	nlliO;
	reg	nllli;
	reg	nllll;
	reg	nlllO;
	reg	nlOl0i;
	reg	nlOl0l;
	reg	nlOl0O;
	reg	nlOl1i;
	reg	nlOl1l;
	reg	nlOl1O;
	reg	nlOlii;
	reg	nlOlil;
	reg	nlOliO;
	reg	nlOlli;
	reg	nlOlll;
	reg	nlOllO;
	reg	nlOlOi;
	reg	nlOlOl;
	reg	nlOlOO;
	wire	wire_n0ii_CLRN;
	wire  [20:0]   wire_n01ll_result;
	wire  [15:0]   wire_niO1O_result;
	wire  [15:0]   wire_nlili_result;
	wire  [15:0]   wire_nlOiOO_result;
	wire  [3:0]   wire_n01l_q;
	wire	wire_n00i_dataout;
	wire	wire_n00l_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n011i_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n101i_dataout;
	wire	wire_n101l_dataout;
	wire	wire_n10i_dataout;
	wire	wire_n10l_dataout;
	wire	wire_n10O_dataout;
	wire	wire_n110i_dataout;
	wire	wire_n110l_dataout;
	wire	wire_n110O_dataout;
	wire	wire_n111i_dataout;
	wire	wire_n111l_dataout;
	wire	wire_n111O_dataout;
	wire	wire_n11i_dataout;
	wire	wire_n11ii_dataout;
	wire	wire_n11il_dataout;
	wire	wire_n11iO_dataout;
	wire	wire_n11l_dataout;
	wire	wire_n11li_dataout;
	wire	wire_n11ll_dataout;
	wire	wire_n11lO_dataout;
	wire	wire_n11O_dataout;
	wire	wire_n11Oi_dataout;
	wire	wire_n11Ol_dataout;
	wire	wire_n11OO_dataout;
	wire	wire_n1ii_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1il_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1li_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1ll_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oi_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Ol_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_n1OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii0O_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niiii_dataout;
	wire	wire_niiil_dataout;
	wire	wire_niiiO_dataout;
	wire	wire_niili_dataout;
	wire	wire_niill_dataout;
	wire	wire_niilO_dataout;
	wire	wire_niiOi_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_niliO_dataout;
	wire	wire_nilli_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl00O_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0iO_dataout;
	wire	wire_nl0li_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nliii_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlO_dataout;
	wire	wire_nlOO0i_dataout;
	wire	wire_nlOO0l_dataout;
	wire	wire_nlOO0O_dataout;
	wire	wire_nlOO1i_dataout;
	wire	wire_nlOO1l_dataout;
	wire	wire_nlOO1O_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOli_dataout;
	wire	wire_nlOOll_dataout;
	wire	wire_nlOOlO_dataout;
	wire	wire_nlOOO_dataout;
	wire	wire_nlOOOi_dataout;
	wire	wire_nlOOOl_dataout;
	wire	wire_nlOOOO_dataout;
	wire  [4:0]   wire_n010O_o;
	wire  [8:0]   wire_nillO_o;
	wire  nlOi0l;
	wire  nlOiil;
	wire  nlOilO;

	altmult_add   niO1i
	( 
	.chainout_sat_overflow(),
	.clock0(clk),
	.dataa({wire_nilOi_q_a[15:0], wire_nilOi_q_b[15:0]}),
	.datab({wire_nilOl_q_a[15:0], wire_nilOO_q_a[15:0]}),
	.ena0(clken),
	.mult0_is_saturated(),
	.mult1_is_saturated(),
	.mult2_is_saturated(),
	.mult3_is_saturated(),
	.overflow(),
	.result(wire_niO1i_result),
	.scanouta(),
	.scanoutb(),
	.accum_sload(),
	.aclr0(),
	.aclr1(),
	.aclr2(),
	.aclr3(),
	.addnsub1(),
	.addnsub1_round(),
	.addnsub3(),
	.addnsub3_round(),
	.chainin(),
	.chainout_round(),
	.chainout_saturate(),
	.clock1(),
	.clock2(),
	.clock3(),
	.ena1(),
	.ena2(),
	.ena3(),
	.mult01_round(),
	.mult01_saturation(),
	.mult23_round(),
	.mult23_saturation(),
	.output_round(),
	.output_saturate(),
	.rotate(),
	.scanina(),
	.scaninb(),
	.shift_right(),
	.signa(),
	.signb(),
	.sourcea(),
	.sourceb(),
	.zero_chainout(),
	.zero_loopback()
	);
	defparam
		niO1i.accum_direction = "ADD",
		niO1i.accum_sload_aclr = "ACLR3",
		niO1i.accum_sload_pipeline_aclr = "ACLR3",
		niO1i.accum_sload_pipeline_register = "CLOCK0",
		niO1i.accum_sload_register = "CLOCK0",
		niO1i.accumulator = "NO",
		niO1i.adder1_rounding = "NO",
		niO1i.adder3_rounding = "NO",
		niO1i.addnsub1_round_aclr = "ACLR3",
		niO1i.addnsub1_round_pipeline_aclr = "ACLR3",
		niO1i.addnsub1_round_pipeline_register = "CLOCK0",
		niO1i.addnsub1_round_register = "CLOCK0",
		niO1i.addnsub3_round_aclr = "ACLR3",
		niO1i.addnsub3_round_pipeline_aclr = "ACLR3",
		niO1i.addnsub3_round_pipeline_register = "CLOCK0",
		niO1i.addnsub3_round_register = "CLOCK0",
		niO1i.addnsub_multiplier_aclr1 = "ACLR3",
		niO1i.addnsub_multiplier_aclr3 = "ACLR3",
		niO1i.addnsub_multiplier_pipeline_aclr1 = "ACLR3",
		niO1i.addnsub_multiplier_pipeline_aclr3 = "ACLR3",
		niO1i.addnsub_multiplier_pipeline_register1 = "CLOCK0",
		niO1i.addnsub_multiplier_pipeline_register3 = "CLOCK0",
		niO1i.addnsub_multiplier_register1 = "CLOCK0",
		niO1i.addnsub_multiplier_register3 = "CLOCK0",
		niO1i.chainout_aclr = "ACLR3",
		niO1i.chainout_adder = "NO",
		niO1i.chainout_register = "CLOCK0",
		niO1i.chainout_round_aclr = "ACLR3",
		niO1i.chainout_round_output_aclr = "ACLR3",
		niO1i.chainout_round_output_register = "CLOCK0",
		niO1i.chainout_round_pipeline_aclr = "ACLR3",
		niO1i.chainout_round_pipeline_register = "CLOCK0",
		niO1i.chainout_round_register = "CLOCK0",
		niO1i.chainout_rounding = "NO",
		niO1i.chainout_saturate_aclr = "ACLR3",
		niO1i.chainout_saturate_output_aclr = "ACLR3",
		niO1i.chainout_saturate_output_register = "CLOCK0",
		niO1i.chainout_saturate_pipeline_aclr = "ACLR3",
		niO1i.chainout_saturate_pipeline_register = "CLOCK0",
		niO1i.chainout_saturate_register = "CLOCK0",
		niO1i.chainout_saturation = "NO",
		niO1i.dsp_block_balancing = "AUTO",
		niO1i.extra_latency = 0,
		niO1i.input_aclr_a0 = "ACLR3",
		niO1i.input_aclr_a1 = "ACLR3",
		niO1i.input_aclr_a2 = "ACLR3",
		niO1i.input_aclr_a3 = "ACLR3",
		niO1i.input_aclr_b0 = "ACLR3",
		niO1i.input_aclr_b1 = "ACLR3",
		niO1i.input_aclr_b2 = "ACLR3",
		niO1i.input_aclr_b3 = "ACLR3",
		niO1i.input_register_a0 = "CLOCK0",
		niO1i.input_register_a1 = "CLOCK0",
		niO1i.input_register_a2 = "CLOCK0",
		niO1i.input_register_a3 = "CLOCK0",
		niO1i.input_register_b0 = "CLOCK0",
		niO1i.input_register_b1 = "CLOCK0",
		niO1i.input_register_b2 = "CLOCK0",
		niO1i.input_register_b3 = "CLOCK0",
		niO1i.input_source_a0 = "DATAA",
		niO1i.input_source_a1 = "DATAA",
		niO1i.input_source_a2 = "DATAA",
		niO1i.input_source_a3 = "DATAA",
		niO1i.input_source_b0 = "DATAB",
		niO1i.input_source_b1 = "DATAB",
		niO1i.input_source_b2 = "DATAB",
		niO1i.input_source_b3 = "DATAB",
		niO1i.intended_device_family = "Cyclone III",
		niO1i.mult01_round_aclr = "ACLR3",
		niO1i.mult01_round_register = "CLOCK0",
		niO1i.mult01_saturation_aclr = "ACLR2",
		niO1i.mult01_saturation_register = "CLOCK0",
		niO1i.mult23_round_aclr = "ACLR3",
		niO1i.mult23_round_register = "CLOCK0",
		niO1i.mult23_saturation_aclr = "ACLR3",
		niO1i.mult23_saturation_register = "CLOCK0",
		niO1i.multiplier01_rounding = "NO",
		niO1i.multiplier01_saturation = "NO",
		niO1i.multiplier1_direction = "SUB",
		niO1i.multiplier23_rounding = "NO",
		niO1i.multiplier23_saturation = "NO",
		niO1i.multiplier3_direction = "ADD",
		niO1i.multiplier_aclr0 = "ACLR3",
		niO1i.multiplier_aclr1 = "ACLR3",
		niO1i.multiplier_aclr2 = "ACLR3",
		niO1i.multiplier_aclr3 = "ACLR3",
		niO1i.multiplier_register0 = "CLOCK0",
		niO1i.multiplier_register1 = "CLOCK0",
		niO1i.multiplier_register2 = "CLOCK0",
		niO1i.multiplier_register3 = "CLOCK0",
		niO1i.number_of_multipliers = 2,
		niO1i.output_aclr = "ACLR3",
		niO1i.output_register = "CLOCK0",
		niO1i.output_round_aclr = "ACLR3",
		niO1i.output_round_pipeline_aclr = "ACLR3",
		niO1i.output_round_pipeline_register = "CLOCK0",
		niO1i.output_round_register = "CLOCK0",
		niO1i.output_round_type = "NEAREST_INTEGER",
		niO1i.output_rounding = "NO",
		niO1i.output_saturate_aclr = "ACLR3",
		niO1i.output_saturate_pipeline_aclr = "ACLR3",
		niO1i.output_saturate_pipeline_register = "CLOCK0",
		niO1i.output_saturate_register = "CLOCK0",
		niO1i.output_saturate_type = "ASYMMETRIC",
		niO1i.output_saturation = "NO",
		niO1i.port_addnsub1 = "PORT_CONNECTIVITY",
		niO1i.port_addnsub3 = "PORT_CONNECTIVITY",
		niO1i.port_chainout_sat_is_overflow = "PORT_UNUSED",
		niO1i.port_output_is_overflow = "PORT_UNUSED",
		niO1i.port_signa = "PORT_CONNECTIVITY",
		niO1i.port_signb = "PORT_CONNECTIVITY",
		niO1i.representation_a = "SIGNED",
		niO1i.representation_b = "SIGNED",
		niO1i.rotate_aclr = "ACLR3",
		niO1i.rotate_output_aclr = "ACLR3",
		niO1i.rotate_output_register = "CLOCK0",
		niO1i.rotate_pipeline_aclr = "ACLR3",
		niO1i.rotate_pipeline_register = "CLOCK0",
		niO1i.rotate_register = "CLOCK0",
		niO1i.scanouta_aclr = "ACLR3",
		niO1i.scanouta_register = "UNREGISTERED",
		niO1i.shift_mode = "NO",
		niO1i.shift_right_aclr = "ACLR3",
		niO1i.shift_right_output_aclr = "ACLR3",
		niO1i.shift_right_output_register = "CLOCK0",
		niO1i.shift_right_pipeline_aclr = "ACLR3",
		niO1i.shift_right_pipeline_register = "CLOCK0",
		niO1i.shift_right_register = "CLOCK0",
		niO1i.signed_aclr_a = "ACLR3",
		niO1i.signed_aclr_b = "ACLR3",
		niO1i.signed_pipeline_aclr_a = "ACLR3",
		niO1i.signed_pipeline_aclr_b = "ACLR3",
		niO1i.signed_pipeline_register_a = "CLOCK0",
		niO1i.signed_pipeline_register_b = "CLOCK0",
		niO1i.signed_register_a = "CLOCK0",
		niO1i.signed_register_b = "CLOCK0",
		niO1i.width_a = 16,
		niO1i.width_b = 16,
		niO1i.width_chainin = 1,
		niO1i.width_msb = 17,
		niO1i.width_result = 33,
		niO1i.width_saturate_sign = 1,
		niO1i.zero_chainout_output_aclr = "ACLR3",
		niO1i.zero_chainout_output_register = "CLOCK0",
		niO1i.zero_loopback_aclr = "ACLR3",
		niO1i.zero_loopback_output_aclr = "ACLR3",
		niO1i.zero_loopback_output_register = "CLOCK0",
		niO1i.zero_loopback_pipeline_aclr = "ACLR3",
		niO1i.zero_loopback_pipeline_register = "CLOCK0",
		niO1i.zero_loopback_register = "CLOCK0";
	altmult_add   niO1l
	( 
	.chainout_sat_overflow(),
	.clock0(clk),
	.dataa({wire_nilOl_q_a[15:0], wire_nilOi_q_a[15:0]}),
	.datab({wire_nilOi_q_b[15:0], wire_nilOO_q_a[15:0]}),
	.ena0(clken),
	.mult0_is_saturated(),
	.mult1_is_saturated(),
	.mult2_is_saturated(),
	.mult3_is_saturated(),
	.overflow(),
	.result(wire_niO1l_result),
	.scanouta(),
	.scanoutb(),
	.accum_sload(),
	.aclr0(),
	.aclr1(),
	.aclr2(),
	.aclr3(),
	.addnsub1(),
	.addnsub1_round(),
	.addnsub3(),
	.addnsub3_round(),
	.chainin(),
	.chainout_round(),
	.chainout_saturate(),
	.clock1(),
	.clock2(),
	.clock3(),
	.ena1(),
	.ena2(),
	.ena3(),
	.mult01_round(),
	.mult01_saturation(),
	.mult23_round(),
	.mult23_saturation(),
	.output_round(),
	.output_saturate(),
	.rotate(),
	.scanina(),
	.scaninb(),
	.shift_right(),
	.signa(),
	.signb(),
	.sourcea(),
	.sourceb(),
	.zero_chainout(),
	.zero_loopback()
	);
	defparam
		niO1l.accum_direction = "ADD",
		niO1l.accum_sload_aclr = "ACLR3",
		niO1l.accum_sload_pipeline_aclr = "ACLR3",
		niO1l.accum_sload_pipeline_register = "CLOCK0",
		niO1l.accum_sload_register = "CLOCK0",
		niO1l.accumulator = "NO",
		niO1l.adder1_rounding = "NO",
		niO1l.adder3_rounding = "NO",
		niO1l.addnsub1_round_aclr = "ACLR3",
		niO1l.addnsub1_round_pipeline_aclr = "ACLR3",
		niO1l.addnsub1_round_pipeline_register = "CLOCK0",
		niO1l.addnsub1_round_register = "CLOCK0",
		niO1l.addnsub3_round_aclr = "ACLR3",
		niO1l.addnsub3_round_pipeline_aclr = "ACLR3",
		niO1l.addnsub3_round_pipeline_register = "CLOCK0",
		niO1l.addnsub3_round_register = "CLOCK0",
		niO1l.addnsub_multiplier_aclr1 = "ACLR3",
		niO1l.addnsub_multiplier_aclr3 = "ACLR3",
		niO1l.addnsub_multiplier_pipeline_aclr1 = "ACLR3",
		niO1l.addnsub_multiplier_pipeline_aclr3 = "ACLR3",
		niO1l.addnsub_multiplier_pipeline_register1 = "CLOCK0",
		niO1l.addnsub_multiplier_pipeline_register3 = "CLOCK0",
		niO1l.addnsub_multiplier_register1 = "CLOCK0",
		niO1l.addnsub_multiplier_register3 = "CLOCK0",
		niO1l.chainout_aclr = "ACLR3",
		niO1l.chainout_adder = "NO",
		niO1l.chainout_register = "CLOCK0",
		niO1l.chainout_round_aclr = "ACLR3",
		niO1l.chainout_round_output_aclr = "ACLR3",
		niO1l.chainout_round_output_register = "CLOCK0",
		niO1l.chainout_round_pipeline_aclr = "ACLR3",
		niO1l.chainout_round_pipeline_register = "CLOCK0",
		niO1l.chainout_round_register = "CLOCK0",
		niO1l.chainout_rounding = "NO",
		niO1l.chainout_saturate_aclr = "ACLR3",
		niO1l.chainout_saturate_output_aclr = "ACLR3",
		niO1l.chainout_saturate_output_register = "CLOCK0",
		niO1l.chainout_saturate_pipeline_aclr = "ACLR3",
		niO1l.chainout_saturate_pipeline_register = "CLOCK0",
		niO1l.chainout_saturate_register = "CLOCK0",
		niO1l.chainout_saturation = "NO",
		niO1l.dsp_block_balancing = "AUTO",
		niO1l.extra_latency = 0,
		niO1l.input_aclr_a0 = "ACLR3",
		niO1l.input_aclr_a1 = "ACLR3",
		niO1l.input_aclr_a2 = "ACLR3",
		niO1l.input_aclr_a3 = "ACLR3",
		niO1l.input_aclr_b0 = "ACLR3",
		niO1l.input_aclr_b1 = "ACLR3",
		niO1l.input_aclr_b2 = "ACLR3",
		niO1l.input_aclr_b3 = "ACLR3",
		niO1l.input_register_a0 = "CLOCK0",
		niO1l.input_register_a1 = "CLOCK0",
		niO1l.input_register_a2 = "CLOCK0",
		niO1l.input_register_a3 = "CLOCK0",
		niO1l.input_register_b0 = "CLOCK0",
		niO1l.input_register_b1 = "CLOCK0",
		niO1l.input_register_b2 = "CLOCK0",
		niO1l.input_register_b3 = "CLOCK0",
		niO1l.input_source_a0 = "DATAA",
		niO1l.input_source_a1 = "DATAA",
		niO1l.input_source_a2 = "DATAA",
		niO1l.input_source_a3 = "DATAA",
		niO1l.input_source_b0 = "DATAB",
		niO1l.input_source_b1 = "DATAB",
		niO1l.input_source_b2 = "DATAB",
		niO1l.input_source_b3 = "DATAB",
		niO1l.intended_device_family = "Cyclone III",
		niO1l.mult01_round_aclr = "ACLR3",
		niO1l.mult01_round_register = "CLOCK0",
		niO1l.mult01_saturation_aclr = "ACLR2",
		niO1l.mult01_saturation_register = "CLOCK0",
		niO1l.mult23_round_aclr = "ACLR3",
		niO1l.mult23_round_register = "CLOCK0",
		niO1l.mult23_saturation_aclr = "ACLR3",
		niO1l.mult23_saturation_register = "CLOCK0",
		niO1l.multiplier01_rounding = "NO",
		niO1l.multiplier01_saturation = "NO",
		niO1l.multiplier1_direction = "ADD",
		niO1l.multiplier23_rounding = "NO",
		niO1l.multiplier23_saturation = "NO",
		niO1l.multiplier3_direction = "ADD",
		niO1l.multiplier_aclr0 = "ACLR3",
		niO1l.multiplier_aclr1 = "ACLR3",
		niO1l.multiplier_aclr2 = "ACLR3",
		niO1l.multiplier_aclr3 = "ACLR3",
		niO1l.multiplier_register0 = "CLOCK0",
		niO1l.multiplier_register1 = "CLOCK0",
		niO1l.multiplier_register2 = "CLOCK0",
		niO1l.multiplier_register3 = "CLOCK0",
		niO1l.number_of_multipliers = 2,
		niO1l.output_aclr = "ACLR3",
		niO1l.output_register = "CLOCK0",
		niO1l.output_round_aclr = "ACLR3",
		niO1l.output_round_pipeline_aclr = "ACLR3",
		niO1l.output_round_pipeline_register = "CLOCK0",
		niO1l.output_round_register = "CLOCK0",
		niO1l.output_round_type = "NEAREST_INTEGER",
		niO1l.output_rounding = "NO",
		niO1l.output_saturate_aclr = "ACLR3",
		niO1l.output_saturate_pipeline_aclr = "ACLR3",
		niO1l.output_saturate_pipeline_register = "CLOCK0",
		niO1l.output_saturate_register = "CLOCK0",
		niO1l.output_saturate_type = "ASYMMETRIC",
		niO1l.output_saturation = "NO",
		niO1l.port_addnsub1 = "PORT_CONNECTIVITY",
		niO1l.port_addnsub3 = "PORT_CONNECTIVITY",
		niO1l.port_chainout_sat_is_overflow = "PORT_UNUSED",
		niO1l.port_output_is_overflow = "PORT_UNUSED",
		niO1l.port_signa = "PORT_CONNECTIVITY",
		niO1l.port_signb = "PORT_CONNECTIVITY",
		niO1l.representation_a = "SIGNED",
		niO1l.representation_b = "SIGNED",
		niO1l.rotate_aclr = "ACLR3",
		niO1l.rotate_output_aclr = "ACLR3",
		niO1l.rotate_output_register = "CLOCK0",
		niO1l.rotate_pipeline_aclr = "ACLR3",
		niO1l.rotate_pipeline_register = "CLOCK0",
		niO1l.rotate_register = "CLOCK0",
		niO1l.scanouta_aclr = "ACLR3",
		niO1l.scanouta_register = "UNREGISTERED",
		niO1l.shift_mode = "NO",
		niO1l.shift_right_aclr = "ACLR3",
		niO1l.shift_right_output_aclr = "ACLR3",
		niO1l.shift_right_output_register = "CLOCK0",
		niO1l.shift_right_pipeline_aclr = "ACLR3",
		niO1l.shift_right_pipeline_register = "CLOCK0",
		niO1l.shift_right_register = "CLOCK0",
		niO1l.signed_aclr_a = "ACLR3",
		niO1l.signed_aclr_b = "ACLR3",
		niO1l.signed_pipeline_aclr_a = "ACLR3",
		niO1l.signed_pipeline_aclr_b = "ACLR3",
		niO1l.signed_pipeline_register_a = "CLOCK0",
		niO1l.signed_pipeline_register_b = "CLOCK0",
		niO1l.signed_register_a = "CLOCK0",
		niO1l.signed_register_b = "CLOCK0",
		niO1l.width_a = 16,
		niO1l.width_b = 16,
		niO1l.width_chainin = 1,
		niO1l.width_msb = 17,
		niO1l.width_result = 33,
		niO1l.width_saturate_sign = 1,
		niO1l.zero_chainout_output_aclr = "ACLR3",
		niO1l.zero_chainout_output_register = "CLOCK0",
		niO1l.zero_loopback_aclr = "ACLR3",
		niO1l.zero_loopback_output_aclr = "ACLR3",
		niO1l.zero_loopback_output_register = "CLOCK0",
		niO1l.zero_loopback_pipeline_aclr = "ACLR3",
		niO1l.zero_loopback_pipeline_register = "CLOCK0",
		niO1l.zero_loopback_register = "CLOCK0";
	altsyncram   nilOi
	( 
	.address_a({n0lOO, n0O1i, n0O1l, n0O1O, n0O0i, n0O0l, n0O0O, n0Oii}),
	.address_b({n0Oil, n0OiO, n0Oli, n0Oll, n0OlO, n0OOi, n0OOl, n0OOO}),
	.clock0(clk),
	.clocken0(clken),
	.data_a({16{1'b0}}),
	.data_b({16{1'b0}}),
	.eccstatus(),
	.q_a(wire_nilOi_q_a),
	.q_b(wire_nilOi_q_b),
	.wren_a(1'b0),
	.wren_b(1'b0),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.rden_a(),
	.rden_b()
	);
	defparam
		nilOi.address_aclr_a = "NONE",
		nilOi.address_aclr_b = "NONE",
		nilOi.address_reg_b = "CLOCK0",
		nilOi.byte_size = 8,
		nilOi.byteena_aclr_a = "NONE",
		nilOi.byteena_aclr_b = "NONE",
		nilOi.byteena_reg_b = "CLOCK1",
		nilOi.clock_enable_core_a = "USE_INPUT_CLKEN",
		nilOi.clock_enable_core_b = "USE_INPUT_CLKEN",
		nilOi.clock_enable_input_a = "NORMAL",
		nilOi.clock_enable_input_b = "NORMAL",
		nilOi.clock_enable_output_a = "NORMAL",
		nilOi.clock_enable_output_b = "NORMAL",
		nilOi.enable_ecc = "FALSE",
		nilOi.indata_aclr_a = "NONE",
		nilOi.indata_aclr_b = "NONE",
		nilOi.indata_reg_b = "CLOCK0",
		nilOi.init_file = "nco_sin_c.hex",
		nilOi.init_file_layout = "PORT_A",
		nilOi.intended_device_family = "Cyclone III",
		nilOi.numwords_a = 256,
		nilOi.numwords_b = 256,
		nilOi.operation_mode = "BIDIR_DUAL_PORT",
		nilOi.outdata_aclr_a = "NONE",
		nilOi.outdata_aclr_b = "NONE",
		nilOi.outdata_reg_a = "CLOCK0",
		nilOi.outdata_reg_b = "CLOCK0",
		nilOi.ram_block_type = "AUTO",
		nilOi.rdcontrol_aclr_b = "NONE",
		nilOi.rdcontrol_reg_b = "CLOCK1",
		nilOi.read_during_write_mode_mixed_ports = "DONT_CARE",
		nilOi.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nilOi.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nilOi.width_a = 16,
		nilOi.width_b = 16,
		nilOi.width_byteena_a = 1,
		nilOi.width_byteena_b = 1,
		nilOi.widthad_a = 8,
		nilOi.widthad_b = 8,
		nilOi.wrcontrol_aclr_a = "NONE",
		nilOi.wrcontrol_aclr_b = "NONE",
		nilOi.wrcontrol_wraddress_reg_b = "CLOCK0",
		nilOi.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nilOl
	( 
	.address_a({ni11i, ni11l, ni11O, ni10i, ni10l, ni10O, ni1ii, ni0iO}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nilOl_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nilOl.address_aclr_a = "NONE",
		nilOl.address_aclr_b = "NONE",
		nilOl.address_reg_b = "CLOCK1",
		nilOl.byte_size = 8,
		nilOl.byteena_aclr_a = "NONE",
		nilOl.byteena_aclr_b = "NONE",
		nilOl.byteena_reg_b = "CLOCK1",
		nilOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		nilOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		nilOl.clock_enable_input_a = "NORMAL",
		nilOl.clock_enable_input_b = "NORMAL",
		nilOl.clock_enable_output_a = "NORMAL",
		nilOl.clock_enable_output_b = "NORMAL",
		nilOl.enable_ecc = "FALSE",
		nilOl.indata_aclr_a = "NONE",
		nilOl.indata_aclr_b = "NONE",
		nilOl.indata_reg_b = "CLOCK1",
		nilOl.init_file = "nco_sin_f.hex",
		nilOl.init_file_layout = "PORT_A",
		nilOl.intended_device_family = "Cyclone III",
		nilOl.numwords_a = 256,
		nilOl.numwords_b = 1,
		nilOl.operation_mode = "ROM",
		nilOl.outdata_aclr_a = "NONE",
		nilOl.outdata_aclr_b = "NONE",
		nilOl.outdata_reg_a = "CLOCK0",
		nilOl.outdata_reg_b = "UNREGISTERED",
		nilOl.ram_block_type = "AUTO",
		nilOl.rdcontrol_aclr_b = "NONE",
		nilOl.rdcontrol_reg_b = "CLOCK1",
		nilOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		nilOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nilOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nilOl.width_a = 16,
		nilOl.width_b = 1,
		nilOl.width_byteena_a = 1,
		nilOl.width_byteena_b = 1,
		nilOl.widthad_a = 8,
		nilOl.widthad_b = 1,
		nilOl.wrcontrol_aclr_a = "NONE",
		nilOl.wrcontrol_aclr_b = "NONE",
		nilOl.wrcontrol_wraddress_reg_b = "CLOCK1",
		nilOl.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nilOO
	( 
	.address_a({ni11i, ni11l, ni11O, ni10i, ni10l, ni10O, ni1ii, ni0iO}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nilOO_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nilOO.address_aclr_a = "NONE",
		nilOO.address_aclr_b = "NONE",
		nilOO.address_reg_b = "CLOCK1",
		nilOO.byte_size = 8,
		nilOO.byteena_aclr_a = "NONE",
		nilOO.byteena_aclr_b = "NONE",
		nilOO.byteena_reg_b = "CLOCK1",
		nilOO.clock_enable_core_a = "USE_INPUT_CLKEN",
		nilOO.clock_enable_core_b = "USE_INPUT_CLKEN",
		nilOO.clock_enable_input_a = "NORMAL",
		nilOO.clock_enable_input_b = "NORMAL",
		nilOO.clock_enable_output_a = "NORMAL",
		nilOO.clock_enable_output_b = "NORMAL",
		nilOO.enable_ecc = "FALSE",
		nilOO.indata_aclr_a = "NONE",
		nilOO.indata_aclr_b = "NONE",
		nilOO.indata_reg_b = "CLOCK1",
		nilOO.init_file = "nco_cos_f.hex",
		nilOO.init_file_layout = "PORT_A",
		nilOO.intended_device_family = "Cyclone III",
		nilOO.numwords_a = 256,
		nilOO.numwords_b = 1,
		nilOO.operation_mode = "ROM",
		nilOO.outdata_aclr_a = "NONE",
		nilOO.outdata_aclr_b = "NONE",
		nilOO.outdata_reg_a = "CLOCK0",
		nilOO.outdata_reg_b = "UNREGISTERED",
		nilOO.ram_block_type = "AUTO",
		nilOO.rdcontrol_aclr_b = "NONE",
		nilOO.rdcontrol_reg_b = "CLOCK1",
		nilOO.read_during_write_mode_mixed_ports = "DONT_CARE",
		nilOO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nilOO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nilOO.width_a = 16,
		nilOO.width_b = 1,
		nilOO.width_byteena_a = 1,
		nilOO.width_byteena_b = 1,
		nilOO.widthad_a = 8,
		nilOO.widthad_b = 1,
		nilOO.wrcontrol_aclr_a = "NONE",
		nilOO.wrcontrol_aclr_b = "NONE",
		nilOO.wrcontrol_wraddress_reg_b = "CLOCK1",
		nilOO.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		nlOi0i7 = 0;
	always @ ( posedge clk)
		  nlOi0i7 <= nlOi0i8;
	event nlOi0i7_event;
	initial
		#1 ->nlOi0i7_event;
	always @(nlOi0i7_event)
		nlOi0i7 <= {1{1'b1}};
	initial
		nlOi0i8 = 0;
	always @ ( posedge clk)
		  nlOi0i8 <= nlOi0i7;
	initial
		nlOi0O5 = 0;
	always @ ( posedge clk)
		  nlOi0O5 <= nlOi0O6;
	event nlOi0O5_event;
	initial
		#1 ->nlOi0O5_event;
	always @(nlOi0O5_event)
		nlOi0O5 <= {1{1'b1}};
	initial
		nlOi0O6 = 0;
	always @ ( posedge clk)
		  nlOi0O6 <= nlOi0O5;
	initial
		nlOi1l10 = 0;
	always @ ( posedge clk)
		  nlOi1l10 <= nlOi1l9;
	initial
		nlOi1l9 = 0;
	always @ ( posedge clk)
		  nlOi1l9 <= nlOi1l10;
	event nlOi1l9_event;
	initial
		#1 ->nlOi1l9_event;
	always @(nlOi1l9_event)
		nlOi1l9 <= {1{1'b1}};
	initial
		nlOiiO3 = 0;
	always @ ( posedge clk)
		  nlOiiO3 <= nlOiiO4;
	event nlOiiO3_event;
	initial
		#1 ->nlOiiO3_event;
	always @(nlOiiO3_event)
		nlOiiO3 <= {1{1'b1}};
	initial
		nlOiiO4 = 0;
	always @ ( posedge clk)
		  nlOiiO4 <= nlOiiO3;
	initial
		nlOiOl1 = 0;
	always @ ( posedge clk)
		  nlOiOl1 <= nlOiOl2;
	event nlOiOl1_event;
	initial
		#1 ->nlOiOl1_event;
	always @(nlOiOl1_event)
		nlOiOl1 <= {1{1'b1}};
	initial
		nlOiOl2 = 0;
	always @ ( posedge clk)
		  nlOiOl2 <= nlOiOl1;
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n001i = 0;
		n001l = 0;
		n001O = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n01i = 0;
		n01li = 0;
		n01lO = 0;
		n01Oi = 0;
		n01Ol = 0;
		n01OO = 0;
		n0il = 0;
		n0lOO = 0;
		n0O0i = 0;
		n0O0l = 0;
		n0O0O = 0;
		n0O1i = 0;
		n0O1l = 0;
		n0O1O = 0;
		n0Oii = 0;
		n0Oil = 0;
		n0OiO = 0;
		n0Oli = 0;
		n0Oll = 0;
		n0OlO = 0;
		n0OOi = 0;
		n0OOl = 0;
		n0OOO = 0;
		n100i = 0;
		n100l = 0;
		n100O = 0;
		n101O = 0;
		n10ii = 0;
		n10il = 0;
		n10iO = 0;
		n10li = 0;
		n10ll = 0;
		n10lO = 0;
		n10Oi = 0;
		n10Ol = 0;
		n10OO = 0;
		n1i0i = 0;
		n1i0l = 0;
		n1i0O = 0;
		n1i1i = 0;
		n1i1l = 0;
		n1i1O = 0;
		n1iii = 0;
		n1iil = 0;
		ni0iO = 0;
		ni10i = 0;
		ni10l = 0;
		ni10O = 0;
		ni11i = 0;
		ni11l = 0;
		ni11O = 0;
		ni1ii = 0;
		niO0l = 0;
		niO0O = 0;
		niOii = 0;
		niOil = 0;
		niOiO = 0;
		niOli = 0;
		niOll = 0;
		niOlO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl10i = 0;
		nl10l = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nliiO = 0;
		nlilO = 0;
		nliOi = 0;
		nliOl = 0;
		nliOO = 0;
		nll0i = 0;
		nll0l = 0;
		nll0O = 0;
		nll1i = 0;
		nll1l = 0;
		nll1O = 0;
		nllii = 0;
		nllil = 0;
		nlliO = 0;
		nllli = 0;
		nllll = 0;
		nlllO = 0;
		nlOl0i = 0;
		nlOl0l = 0;
		nlOl0O = 0;
		nlOl1i = 0;
		nlOl1l = 0;
		nlOl1O = 0;
		nlOlii = 0;
		nlOlil = 0;
		nlOliO = 0;
		nlOlli = 0;
		nlOlll = 0;
		nlOllO = 0;
		nlOlOi = 0;
		nlOlOl = 0;
		nlOlOO = 0;
	end
	always @ ( posedge clk or  negedge wire_n0ii_CLRN)
	begin
		if (wire_n0ii_CLRN == 1'b0) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n001i <= 0;
			n001l <= 0;
			n001O <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n01i <= 0;
			n01li <= 0;
			n01lO <= 0;
			n01Oi <= 0;
			n01Ol <= 0;
			n01OO <= 0;
			n0il <= 0;
			n0lOO <= 0;
			n0O0i <= 0;
			n0O0l <= 0;
			n0O0O <= 0;
			n0O1i <= 0;
			n0O1l <= 0;
			n0O1O <= 0;
			n0Oii <= 0;
			n0Oil <= 0;
			n0OiO <= 0;
			n0Oli <= 0;
			n0Oll <= 0;
			n0OlO <= 0;
			n0OOi <= 0;
			n0OOl <= 0;
			n0OOO <= 0;
			n100i <= 0;
			n100l <= 0;
			n100O <= 0;
			n101O <= 0;
			n10ii <= 0;
			n10il <= 0;
			n10iO <= 0;
			n10li <= 0;
			n10ll <= 0;
			n10lO <= 0;
			n10Oi <= 0;
			n10Ol <= 0;
			n10OO <= 0;
			n1i0i <= 0;
			n1i0l <= 0;
			n1i0O <= 0;
			n1i1i <= 0;
			n1i1l <= 0;
			n1i1O <= 0;
			n1iii <= 0;
			n1iil <= 0;
			ni0iO <= 0;
			ni10i <= 0;
			ni10l <= 0;
			ni10O <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni11O <= 0;
			ni1ii <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niOii <= 0;
			niOil <= 0;
			niOiO <= 0;
			niOli <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nliiO <= 0;
			nlilO <= 0;
			nliOi <= 0;
			nliOl <= 0;
			nliOO <= 0;
			nll0i <= 0;
			nll0l <= 0;
			nll0O <= 0;
			nll1i <= 0;
			nll1l <= 0;
			nll1O <= 0;
			nllii <= 0;
			nllil <= 0;
			nlliO <= 0;
			nllli <= 0;
			nllll <= 0;
			nlllO <= 0;
			nlOl0i <= 0;
			nlOl0l <= 0;
			nlOl0O <= 0;
			nlOl1i <= 0;
			nlOl1l <= 0;
			nlOl1O <= 0;
			nlOlii <= 0;
			nlOlil <= 0;
			nlOliO <= 0;
			nlOlli <= 0;
			nlOlll <= 0;
			nlOllO <= 0;
			nlOlOi <= 0;
			nlOlOl <= 0;
			nlOlOO <= 0;
		end
		else 
		begin
			n000i <= wire_n0i0O_dataout;
			n000l <= wire_n0i0l_dataout;
			n000O <= wire_n0i0i_dataout;
			n001i <= wire_n0iiO_dataout;
			n001l <= wire_n0iil_dataout;
			n001O <= wire_n0iii_dataout;
			n00ii <= wire_n0i1O_dataout;
			n00il <= wire_n0i1l_dataout;
			n00iO <= wire_n0i1i_dataout;
			n00li <= wire_n00OO_dataout;
			n00ll <= wire_n00Ol_dataout;
			n00lO <= wire_n00Oi_dataout;
			n01i <= wire_nllOi_dataout;
			n01li <= wire_n1iiO_dataout;
			n01lO <= wire_n0iOi_dataout;
			n01Oi <= wire_n0ilO_dataout;
			n01Ol <= wire_n0ill_dataout;
			n01OO <= wire_n0ili_dataout;
			n0il <= wire_n00i_dataout;
			n0lOO <= wire_nii1l_dataout;
			n0O0i <= wire_ni0Oi_dataout;
			n0O0l <= wire_ni0lO_dataout;
			n0O0O <= wire_ni0ll_dataout;
			n0O1i <= wire_nii1i_dataout;
			n0O1l <= wire_ni0OO_dataout;
			n0O1O <= wire_ni0Ol_dataout;
			n0Oii <= wire_ni0li_dataout;
			n0Oil <= wire_ni0il_dataout;
			n0OiO <= wire_ni0ii_dataout;
			n0Oli <= wire_ni00O_dataout;
			n0Oll <= wire_ni00l_dataout;
			n0OlO <= wire_ni00i_dataout;
			n0OOi <= wire_ni01O_dataout;
			n0OOl <= wire_ni01l_dataout;
			n0OOO <= wire_ni01i_dataout;
			n100i <= wire_n1lOl_dataout;
			n100l <= wire_n1lOi_dataout;
			n100O <= wire_n1llO_dataout;
			n101O <= wire_nlOO1i_dataout;
			n10ii <= wire_n1lll_dataout;
			n10il <= wire_n1lli_dataout;
			n10iO <= wire_n1liO_dataout;
			n10li <= wire_n1lil_dataout;
			n10ll <= wire_n1lii_dataout;
			n10lO <= wire_n1l0O_dataout;
			n10Oi <= wire_n1l0l_dataout;
			n10Ol <= wire_n1l0i_dataout;
			n10OO <= wire_n1l1O_dataout;
			n1i0i <= wire_n1iOl_dataout;
			n1i0l <= wire_n1iOi_dataout;
			n1i0O <= wire_n1ilO_dataout;
			n1i1i <= wire_n1l1l_dataout;
			n1i1l <= wire_n1l1i_dataout;
			n1i1O <= wire_n1iOO_dataout;
			n1iii <= wire_n1ill_dataout;
			n1iil <= wire_n1ili_dataout;
			ni0iO <= wire_ni1il_dataout;
			ni10i <= wire_ni1lO_dataout;
			ni10l <= wire_ni1ll_dataout;
			ni10O <= wire_ni1li_dataout;
			ni11i <= wire_ni1OO_dataout;
			ni11l <= wire_ni1Ol_dataout;
			ni11O <= wire_ni1Oi_dataout;
			ni1ii <= wire_ni1iO_dataout;
			niO0l <= wire_nl00O_dataout;
			niO0O <= wire_nl00l_dataout;
			niOii <= wire_nl00i_dataout;
			niOil <= wire_nl01O_dataout;
			niOiO <= wire_nl01l_dataout;
			niOli <= wire_nl01i_dataout;
			niOll <= wire_nl1OO_dataout;
			niOlO <= wire_nl1Ol_dataout;
			niOOi <= wire_nl1Oi_dataout;
			niOOl <= wire_nl1lO_dataout;
			niOOO <= wire_nl1ll_dataout;
			nl10i <= wire_nl1ii_dataout;
			nl10l <= (~ nlOi0l);
			nl11i <= wire_nl1li_dataout;
			nl11l <= wire_nl1iO_dataout;
			nl11O <= wire_nl1il_dataout;
			nliiO <= wire_nl10O_dataout;
			nlilO <= wire_nlOOi_dataout;
			nliOi <= wire_nlOlO_dataout;
			nliOl <= wire_nlOll_dataout;
			nliOO <= wire_nlOli_dataout;
			nll0i <= wire_nlO0O_dataout;
			nll0l <= wire_nlO0l_dataout;
			nll0O <= wire_nlO0i_dataout;
			nll1i <= wire_nlOiO_dataout;
			nll1l <= wire_nlOil_dataout;
			nll1O <= wire_nlOii_dataout;
			nllii <= wire_nlO1O_dataout;
			nllil <= wire_nlO1l_dataout;
			nlliO <= wire_nlO1i_dataout;
			nllli <= wire_nllOO_dataout;
			nllll <= wire_nllOl_dataout;
			nlllO <= (~ nlOiil);
			nlOl0i <= wire_nlOOOi_dataout;
			nlOl0l <= wire_nlOOlO_dataout;
			nlOl0O <= wire_nlOOll_dataout;
			nlOl1i <= wire_n111i_dataout;
			nlOl1l <= wire_nlOOOO_dataout;
			nlOl1O <= wire_nlOOOl_dataout;
			nlOlii <= wire_nlOOli_dataout;
			nlOlil <= wire_nlOOiO_dataout;
			nlOliO <= wire_nlOOil_dataout;
			nlOlli <= wire_nlOOii_dataout;
			nlOlll <= wire_nlOO0O_dataout;
			nlOllO <= wire_nlOO0l_dataout;
			nlOlOi <= wire_nlOO0i_dataout;
			nlOlOl <= wire_nlOO1O_dataout;
			nlOlOO <= wire_nlOO1l_dataout;
		end
	end
	assign
		wire_n0ii_CLRN = (nlOiOl2 ^ nlOiOl1);
	lpm_add_sub   n01ll
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_nlOiOO_result[15:0], {5{1'b0}}}),
	.datab({{17{n1i0l}}, n1i0O, n1iii, n1iil, n01li}),
	.overflow(),
	.result(wire_n01ll_result),
	.cin()
	);
	defparam
		n01ll.lpm_pipeline = 1,
		n01ll.lpm_representation = "SIGNED",
		n01ll.lpm_width = 21;
	lpm_add_sub   niO1O
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.cin((nl10l & (~ niO0l))),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({niO0l, niO0O, niOii, niOil, niOiO, niOli, niOll, niOlO, niOOi, niOOl, niOOO, nl11i, nl11l, nl11O, nl10i, nliiO}),
	.datab({16{1'b0}}),
	.overflow(),
	.result(wire_niO1O_result));
	defparam
		niO1O.lpm_pipeline = 1,
		niO1O.lpm_representation = "SIGNED",
		niO1O.lpm_width = 16;
	lpm_add_sub   nlili
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.cin(((nlllO & (~ nlilO)) & (nlOi0O6 ^ nlOi0O5))),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nlilO, nliOi, nliOl, nliOO, nll1i, nll1l, nll1O, nll0i, nll0l, nll0O, nllii, nllil, nlliO, nllli, nllll, n01i}),
	.datab({16{1'b0}}),
	.overflow(),
	.result(wire_nlili_result));
	defparam
		nlili.lpm_pipeline = 1,
		nlili.lpm_representation = "SIGNED",
		nlili.lpm_width = 16;
	lpm_add_sub   nlOiOO
	( 
	.aclr((~ reset_n)),
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nlOl1i, nlOl1l, nlOl1O, nlOl0i, nlOl0l, nlOl0O, nlOlii, nlOlil, nlOliO, nlOlli, nlOlll, nlOllO, nlOlOi, nlOlOl, nlOlOO, n101O}),
	.datab({wire_nlOiOO_result[15:0]}),
	.overflow(),
	.result(wire_nlOiOO_result),
	.cin()
	);
	defparam
		nlOiOO.lpm_pipeline = 1,
		nlOiOO.lpm_representation = "UNSIGNED",
		nlOiOO.lpm_width = 16;
	lpm_counter   n01l
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_n01l_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		n01l.lpm_direction = "UP",
		n01l.lpm_modulus = 0,
		n01l.lpm_port_updown = "PORT_CONNECTIVITY",
		n01l.lpm_width = 4;
	and(wire_n00i_dataout, wire_n00l_dataout, ~((~ reset_n)));
	or(wire_n00l_dataout, n0il, (clken & (((((~ wire_n01l_q[0]) & wire_n01l_q[1]) & (~ wire_n01l_q[2])) & wire_n01l_q[3]) & (nlOiiO4 ^ nlOiiO3))));
	and(wire_n00Oi_dataout, wire_n0iOl_dataout, ~((~ reset_n)));
	and(wire_n00Ol_dataout, wire_n0iOO_dataout, ~((~ reset_n)));
	and(wire_n00OO_dataout, wire_n0l1i_dataout, ~((~ reset_n)));
	assign		wire_n010i_dataout = (clken === 1'b1) ? n100O : n100l;
	assign		wire_n010l_dataout = (clken === 1'b1) ? n100l : n100i;
	assign		wire_n011i_dataout = (clken === 1'b1) ? n10iO : n10il;
	assign		wire_n011l_dataout = (clken === 1'b1) ? n10il : n10ii;
	assign		wire_n011O_dataout = (clken === 1'b1) ? n10ii : n100O;
	and(wire_n0i0i_dataout, wire_n0l0l_dataout, ~((~ reset_n)));
	and(wire_n0i0l_dataout, wire_n0l0O_dataout, ~((~ reset_n)));
	and(wire_n0i0O_dataout, wire_n0lii_dataout, ~((~ reset_n)));
	and(wire_n0i1i_dataout, wire_n0l1l_dataout, ~((~ reset_n)));
	and(wire_n0i1l_dataout, wire_n0l1O_dataout, ~((~ reset_n)));
	and(wire_n0i1O_dataout, wire_n0l0i_dataout, ~((~ reset_n)));
	and(wire_n0iii_dataout, wire_n0lil_dataout, ~((~ reset_n)));
	and(wire_n0iil_dataout, wire_n0liO_dataout, ~((~ reset_n)));
	and(wire_n0iiO_dataout, wire_n0lli_dataout, ~((~ reset_n)));
	and(wire_n0ili_dataout, wire_n0lll_dataout, ~((~ reset_n)));
	and(wire_n0ill_dataout, wire_n0llO_dataout, ~((~ reset_n)));
	and(wire_n0ilO_dataout, wire_n0lOi_dataout, ~((~ reset_n)));
	and(wire_n0iOi_dataout, wire_n0lOl_dataout, ~((~ reset_n)));
	assign		wire_n0iOl_dataout = (clken === 1'b1) ? wire_n01ll_result[5] : n00lO;
	assign		wire_n0iOO_dataout = (clken === 1'b1) ? wire_n01ll_result[6] : n00ll;
	assign		wire_n0l0i_dataout = (clken === 1'b1) ? wire_n01ll_result[10] : n00ii;
	assign		wire_n0l0l_dataout = (clken === 1'b1) ? wire_n01ll_result[11] : n000O;
	assign		wire_n0l0O_dataout = (clken === 1'b1) ? wire_n01ll_result[12] : n000l;
	assign		wire_n0l1i_dataout = (clken === 1'b1) ? wire_n01ll_result[7] : n00li;
	assign		wire_n0l1l_dataout = (clken === 1'b1) ? wire_n01ll_result[8] : n00iO;
	assign		wire_n0l1O_dataout = (clken === 1'b1) ? wire_n01ll_result[9] : n00il;
	assign		wire_n0lii_dataout = (clken === 1'b1) ? wire_n01ll_result[13] : n000i;
	assign		wire_n0lil_dataout = (clken === 1'b1) ? wire_n01ll_result[14] : n001O;
	assign		wire_n0liO_dataout = (clken === 1'b1) ? wire_n01ll_result[15] : n001l;
	assign		wire_n0lli_dataout = (clken === 1'b1) ? wire_n01ll_result[16] : n001i;
	assign		wire_n0lll_dataout = (clken === 1'b1) ? wire_n01ll_result[17] : n01OO;
	assign		wire_n0llO_dataout = (clken === 1'b1) ? wire_n01ll_result[18] : n01Ol;
	assign		wire_n0lOi_dataout = (clken === 1'b1) ? wire_n01ll_result[19] : n01Oi;
	assign		wire_n0lOl_dataout = (clken === 1'b1) ? wire_n01ll_result[20] : n01lO;
	assign		wire_n101i_dataout = (clken === 1'b1) ? phi_inc_i[14] : nlOl1l;
	assign		wire_n101l_dataout = (clken === 1'b1) ? phi_inc_i[15] : nlOl1i;
	assign		wire_n10i_dataout = (clken === 1'b1) ? wire_niO1i_result[20] : nllii;
	assign		wire_n10l_dataout = (clken === 1'b1) ? wire_niO1i_result[21] : nll0O;
	assign		wire_n10O_dataout = (clken === 1'b1) ? wire_niO1i_result[22] : nll0l;
	assign		wire_n110i_dataout = (clken === 1'b1) ? phi_inc_i[2] : nlOlOl;
	assign		wire_n110l_dataout = (clken === 1'b1) ? phi_inc_i[3] : nlOlOi;
	assign		wire_n110O_dataout = (clken === 1'b1) ? phi_inc_i[4] : nlOllO;
	and(wire_n111i_dataout, wire_n101l_dataout, ~((~ reset_n)));
	assign		wire_n111l_dataout = (clken === 1'b1) ? phi_inc_i[0] : n101O;
	assign		wire_n111O_dataout = (clken === 1'b1) ? phi_inc_i[1] : nlOlOO;
	assign		wire_n11i_dataout = (clken === 1'b1) ? wire_niO1i_result[17] : nllli;
	assign		wire_n11ii_dataout = (clken === 1'b1) ? phi_inc_i[5] : nlOlll;
	assign		wire_n11il_dataout = (clken === 1'b1) ? phi_inc_i[6] : nlOlli;
	assign		wire_n11iO_dataout = (clken === 1'b1) ? phi_inc_i[7] : nlOliO;
	assign		wire_n11l_dataout = (clken === 1'b1) ? wire_niO1i_result[18] : nlliO;
	assign		wire_n11li_dataout = (clken === 1'b1) ? phi_inc_i[8] : nlOlil;
	assign		wire_n11ll_dataout = (clken === 1'b1) ? phi_inc_i[9] : nlOlii;
	assign		wire_n11lO_dataout = (clken === 1'b1) ? phi_inc_i[10] : nlOl0O;
	assign		wire_n11O_dataout = (clken === 1'b1) ? wire_niO1i_result[19] : nllil;
	assign		wire_n11Oi_dataout = (clken === 1'b1) ? phi_inc_i[11] : nlOl0l;
	assign		wire_n11Ol_dataout = (clken === 1'b1) ? phi_inc_i[12] : nlOl0i;
	assign		wire_n11OO_dataout = (clken === 1'b1) ? phi_inc_i[13] : nlOl1O;
	assign		wire_n1ii_dataout = (clken === 1'b1) ? wire_niO1i_result[23] : nll0i;
	and(wire_n1iiO_dataout, wire_n1lOO_dataout, ~((~ reset_n)));
	assign		wire_n1il_dataout = (clken === 1'b1) ? wire_niO1i_result[24] : nll1O;
	and(wire_n1ili_dataout, wire_n1O1i_dataout, ~((~ reset_n)));
	and(wire_n1ill_dataout, wire_n1O1l_dataout, ~((~ reset_n)));
	and(wire_n1ilO_dataout, wire_n1O1O_dataout, ~((~ reset_n)));
	assign		wire_n1iO_dataout = (clken === 1'b1) ? wire_niO1i_result[25] : nll1l;
	and(wire_n1iOi_dataout, wire_n1O0i_dataout, ~((~ reset_n)));
	or(wire_n1iOl_dataout, wire_n1O0l_dataout, (~ reset_n));
	and(wire_n1iOO_dataout, wire_n1O0O_dataout, ~((~ reset_n)));
	and(wire_n1l0i_dataout, wire_n1Oli_dataout, ~((~ reset_n)));
	or(wire_n1l0l_dataout, wire_n1Oll_dataout, (~ reset_n));
	or(wire_n1l0O_dataout, wire_n1OlO_dataout, (~ reset_n));
	or(wire_n1l1i_dataout, wire_n1Oii_dataout, (~ reset_n));
	or(wire_n1l1l_dataout, wire_n1Oil_dataout, (~ reset_n));
	or(wire_n1l1O_dataout, wire_n1OiO_dataout, (~ reset_n));
	assign		wire_n1li_dataout = (clken === 1'b1) ? wire_niO1i_result[26] : nll1i;
	and(wire_n1lii_dataout, wire_n1OOi_dataout, ~((~ reset_n)));
	or(wire_n1lil_dataout, wire_n1OOl_dataout, (~ reset_n));
	and(wire_n1liO_dataout, wire_n1OOO_dataout, ~((~ reset_n)));
	assign		wire_n1ll_dataout = (clken === 1'b1) ? wire_niO1i_result[27] : nliOO;
	or(wire_n1lli_dataout, wire_n011i_dataout, (~ reset_n));
	or(wire_n1lll_dataout, wire_n011l_dataout, (~ reset_n));
	and(wire_n1llO_dataout, wire_n011O_dataout, ~((~ reset_n)));
	assign		wire_n1lO_dataout = (clken === 1'b1) ? wire_niO1i_result[28] : nliOl;
	and(wire_n1lOi_dataout, wire_n010i_dataout, ~((~ reset_n)));
	or(wire_n1lOl_dataout, wire_n010l_dataout, (~ reset_n));
	assign		wire_n1lOO_dataout = (clken === 1'b1) ? wire_n010O_o[0] : n01li;
	assign		wire_n1O0i_dataout = (clken === 1'b1) ? wire_n010O_o[4] : n1i0l;
	assign		wire_n1O0l_dataout = (clken === 1'b1) ? (((n100i ^ n100l) ^ (~ (nlOi1l10 ^ nlOi1l9))) ^ (n10ii ^ n1i1i)) : n1i0i;
	assign		wire_n1O0O_dataout = (clken === 1'b1) ? n1i0i : n1i1O;
	assign		wire_n1O1i_dataout = (clken === 1'b1) ? wire_n010O_o[1] : n1iil;
	assign		wire_n1O1l_dataout = (clken === 1'b1) ? wire_n010O_o[2] : n1iii;
	assign		wire_n1O1O_dataout = (clken === 1'b1) ? wire_n010O_o[3] : n1i0O;
	assign		wire_n1Oi_dataout = (clken === 1'b1) ? wire_niO1i_result[29] : nliOi;
	assign		wire_n1Oii_dataout = (clken === 1'b1) ? n1i1O : n1i1l;
	assign		wire_n1Oil_dataout = (clken === 1'b1) ? n1i1l : n1i1i;
	assign		wire_n1OiO_dataout = (clken === 1'b1) ? n1i1i : n10OO;
	assign		wire_n1Ol_dataout = (clken === 1'b1) ? wire_niO1i_result[30] : nlilO;
	assign		wire_n1Oli_dataout = (clken === 1'b1) ? n10OO : n10Ol;
	assign		wire_n1Oll_dataout = (clken === 1'b1) ? n10Ol : n10Oi;
	assign		wire_n1OlO_dataout = (clken === 1'b1) ? n10Oi : n10lO;
	assign		wire_n1OOi_dataout = (clken === 1'b1) ? n10lO : n10ll;
	assign		wire_n1OOl_dataout = (clken === 1'b1) ? n10ll : n10li;
	assign		wire_n1OOO_dataout = (clken === 1'b1) ? n10li : n10iO;
	and(wire_ni00i_dataout, wire_niiOl_dataout, ~((~ reset_n)));
	and(wire_ni00l_dataout, wire_niiOO_dataout, ~((~ reset_n)));
	and(wire_ni00O_dataout, wire_nil1i_dataout, ~((~ reset_n)));
	and(wire_ni01i_dataout, wire_niill_dataout, ~((~ reset_n)));
	and(wire_ni01l_dataout, wire_niilO_dataout, ~((~ reset_n)));
	and(wire_ni01O_dataout, wire_niiOi_dataout, ~((~ reset_n)));
	and(wire_ni0ii_dataout, wire_nil1l_dataout, ~((~ reset_n)));
	and(wire_ni0il_dataout, wire_nil1O_dataout, ~((~ reset_n)));
	and(wire_ni0li_dataout, wire_nil0i_dataout, ~((~ reset_n)));
	and(wire_ni0ll_dataout, wire_nil0l_dataout, ~((~ reset_n)));
	and(wire_ni0lO_dataout, wire_nil0O_dataout, ~((~ reset_n)));
	and(wire_ni0Oi_dataout, wire_nilii_dataout, ~((~ reset_n)));
	and(wire_ni0Ol_dataout, wire_nilil_dataout, ~((~ reset_n)));
	and(wire_ni0OO_dataout, wire_niliO_dataout, ~((~ reset_n)));
	and(wire_ni1il_dataout, wire_nii1O_dataout, ~((~ reset_n)));
	and(wire_ni1iO_dataout, wire_nii0i_dataout, ~((~ reset_n)));
	and(wire_ni1li_dataout, wire_nii0l_dataout, ~((~ reset_n)));
	and(wire_ni1ll_dataout, wire_nii0O_dataout, ~((~ reset_n)));
	and(wire_ni1lO_dataout, wire_niiii_dataout, ~((~ reset_n)));
	and(wire_ni1Oi_dataout, wire_niiil_dataout, ~((~ reset_n)));
	and(wire_ni1Ol_dataout, wire_niiiO_dataout, ~((~ reset_n)));
	and(wire_ni1OO_dataout, wire_niili_dataout, ~((~ reset_n)));
	assign		wire_nii0i_dataout = (clken === 1'b1) ? n00ll : ni1ii;
	assign		wire_nii0l_dataout = (clken === 1'b1) ? n00li : ni10O;
	assign		wire_nii0O_dataout = (clken === 1'b1) ? n00iO : ni10l;
	and(wire_nii1i_dataout, wire_nilli_dataout, ~((~ reset_n)));
	and(wire_nii1l_dataout, wire_nilll_dataout, ~((~ reset_n)));
	assign		wire_nii1O_dataout = (clken === 1'b1) ? n00lO : ni0iO;
	assign		wire_niiii_dataout = (clken === 1'b1) ? n00il : ni10i;
	assign		wire_niiil_dataout = (clken === 1'b1) ? n00ii : ni11O;
	assign		wire_niiiO_dataout = (clken === 1'b1) ? n000O : ni11l;
	assign		wire_niili_dataout = (clken === 1'b1) ? n000l : ni11i;
	assign		wire_niill_dataout = (clken === 1'b1) ? wire_nillO_o[0] : n0OOO;
	assign		wire_niilO_dataout = (clken === 1'b1) ? wire_nillO_o[1] : n0OOl;
	assign		wire_niiOi_dataout = (clken === 1'b1) ? wire_nillO_o[2] : n0OOi;
	assign		wire_niiOl_dataout = (clken === 1'b1) ? wire_nillO_o[3] : n0OlO;
	assign		wire_niiOO_dataout = (clken === 1'b1) ? wire_nillO_o[4] : n0Oll;
	assign		wire_nil0i_dataout = (clken === 1'b1) ? n000i : n0Oii;
	assign		wire_nil0l_dataout = (clken === 1'b1) ? n001O : n0O0O;
	assign		wire_nil0O_dataout = (clken === 1'b1) ? n001l : n0O0l;
	assign		wire_nil1i_dataout = (clken === 1'b1) ? wire_nillO_o[5] : n0Oli;
	assign		wire_nil1l_dataout = (clken === 1'b1) ? wire_nillO_o[6] : n0OiO;
	assign		wire_nil1O_dataout = (clken === 1'b1) ? wire_nillO_o[7] : n0Oil;
	assign		wire_nilii_dataout = (clken === 1'b1) ? n001i : n0O0i;
	assign		wire_nilil_dataout = (clken === 1'b1) ? n01OO : n0O1O;
	assign		wire_niliO_dataout = (clken === 1'b1) ? n01Ol : n0O1l;
	assign		wire_nilli_dataout = (clken === 1'b1) ? n01Oi : n0O1i;
	assign		wire_nilll_dataout = (clken === 1'b1) ? n01lO : n0lOO;
	and(wire_nl00i_dataout, wire_nli0l_dataout, ~((~ reset_n)));
	and(wire_nl00l_dataout, wire_nli0O_dataout, ~((~ reset_n)));
	and(wire_nl00O_dataout, wire_nliii_dataout, ~((~ reset_n)));
	and(wire_nl01i_dataout, wire_nli1l_dataout, ~((~ reset_n)));
	and(wire_nl01l_dataout, wire_nli1O_dataout, ~((~ reset_n)));
	and(wire_nl01O_dataout, wire_nli0i_dataout, ~((~ reset_n)));
	assign		wire_nl0ii_dataout = (clken === 1'b1) ? wire_niO1l_result[15] : nliiO;
	assign		wire_nl0il_dataout = (clken === 1'b1) ? wire_niO1l_result[16] : nl10i;
	assign		wire_nl0iO_dataout = (clken === 1'b1) ? wire_niO1l_result[17] : nl11O;
	assign		wire_nl0li_dataout = (clken === 1'b1) ? wire_niO1l_result[18] : nl11l;
	assign		wire_nl0ll_dataout = (clken === 1'b1) ? wire_niO1l_result[19] : nl11i;
	assign		wire_nl0lO_dataout = (clken === 1'b1) ? wire_niO1l_result[20] : niOOO;
	assign		wire_nl0Oi_dataout = (clken === 1'b1) ? wire_niO1l_result[21] : niOOl;
	assign		wire_nl0Ol_dataout = (clken === 1'b1) ? wire_niO1l_result[22] : niOOi;
	assign		wire_nl0OO_dataout = (clken === 1'b1) ? wire_niO1l_result[23] : niOlO;
	and(wire_nl10O_dataout, wire_nl0ii_dataout, ~((~ reset_n)));
	and(wire_nl1ii_dataout, wire_nl0il_dataout, ~((~ reset_n)));
	and(wire_nl1il_dataout, wire_nl0iO_dataout, ~((~ reset_n)));
	and(wire_nl1iO_dataout, wire_nl0li_dataout, ~((~ reset_n)));
	and(wire_nl1li_dataout, wire_nl0ll_dataout, ~((~ reset_n)));
	and(wire_nl1ll_dataout, wire_nl0lO_dataout, ~((~ reset_n)));
	and(wire_nl1lO_dataout, wire_nl0Oi_dataout, ~((~ reset_n)));
	and(wire_nl1Oi_dataout, wire_nl0Ol_dataout, ~((~ reset_n)));
	and(wire_nl1Ol_dataout, wire_nl0OO_dataout, ~((~ reset_n)));
	and(wire_nl1OO_dataout, wire_nli1i_dataout, ~((~ reset_n)));
	assign		wire_nli0i_dataout = (clken === 1'b1) ? wire_niO1l_result[27] : niOil;
	assign		wire_nli0l_dataout = (clken === 1'b1) ? wire_niO1l_result[28] : niOii;
	assign		wire_nli0O_dataout = (clken === 1'b1) ? wire_niO1l_result[29] : niO0O;
	assign		wire_nli1i_dataout = (clken === 1'b1) ? wire_niO1l_result[24] : niOll;
	assign		wire_nli1l_dataout = (clken === 1'b1) ? wire_niO1l_result[25] : niOli;
	assign		wire_nli1O_dataout = (clken === 1'b1) ? wire_niO1l_result[26] : niOiO;
	assign		wire_nliii_dataout = (clken === 1'b1) ? wire_niO1l_result[30] : niO0l;
	and(wire_nllOi_dataout, wire_nlOOl_dataout, ~((~ reset_n)));
	and(wire_nllOl_dataout, wire_nlOOO_dataout, ~((~ reset_n)));
	and(wire_nllOO_dataout, wire_n11i_dataout, ~((~ reset_n)));
	and(wire_nlO0i_dataout, wire_n10l_dataout, ~((~ reset_n)));
	and(wire_nlO0l_dataout, wire_n10O_dataout, ~((~ reset_n)));
	and(wire_nlO0O_dataout, wire_n1ii_dataout, ~((~ reset_n)));
	and(wire_nlO1i_dataout, wire_n11l_dataout, ~((~ reset_n)));
	and(wire_nlO1l_dataout, wire_n11O_dataout, ~((~ reset_n)));
	and(wire_nlO1O_dataout, wire_n10i_dataout, ~((~ reset_n)));
	and(wire_nlOii_dataout, wire_n1il_dataout, ~((~ reset_n)));
	and(wire_nlOil_dataout, wire_n1iO_dataout, ~((~ reset_n)));
	and(wire_nlOiO_dataout, wire_n1li_dataout, ~((~ reset_n)));
	and(wire_nlOli_dataout, wire_n1ll_dataout, ~((~ reset_n)));
	and(wire_nlOll_dataout, wire_n1lO_dataout, ~((~ reset_n)));
	and(wire_nlOlO_dataout, wire_n1Oi_dataout, ~((~ reset_n)));
	and(wire_nlOO0i_dataout, wire_n110l_dataout, ~((~ reset_n)));
	and(wire_nlOO0l_dataout, wire_n110O_dataout, ~((~ reset_n)));
	and(wire_nlOO0O_dataout, wire_n11ii_dataout, ~((~ reset_n)));
	and(wire_nlOO1i_dataout, wire_n111l_dataout, ~((~ reset_n)));
	and(wire_nlOO1l_dataout, wire_n111O_dataout, ~((~ reset_n)));
	and(wire_nlOO1O_dataout, wire_n110i_dataout, ~((~ reset_n)));
	and(wire_nlOOi_dataout, wire_n1Ol_dataout, ~((~ reset_n)));
	and(wire_nlOOii_dataout, wire_n11il_dataout, ~((~ reset_n)));
	and(wire_nlOOil_dataout, wire_n11iO_dataout, ~((~ reset_n)));
	and(wire_nlOOiO_dataout, wire_n11li_dataout, ~((~ reset_n)));
	assign		wire_nlOOl_dataout = (clken === 1'b1) ? wire_niO1i_result[15] : n01i;
	and(wire_nlOOli_dataout, wire_n11ll_dataout, ~((~ reset_n)));
	and(wire_nlOOll_dataout, wire_n11lO_dataout, ~((~ reset_n)));
	and(wire_nlOOlO_dataout, wire_n11Oi_dataout, ~((~ reset_n)));
	assign		wire_nlOOO_dataout = (clken === 1'b1) ? wire_niO1i_result[16] : nllll;
	and(wire_nlOOOi_dataout, wire_n11Ol_dataout, ~((~ reset_n)));
	and(wire_nlOOOl_dataout, wire_n11OO_dataout, ~((~ reset_n)));
	and(wire_nlOOOO_dataout, wire_n101i_dataout, ~((~ reset_n)));
	oper_add   n010O
	( 
	.a({n100i, n100l, n100O, n10ii, n10il}),
	.b({{4{1'b0}}, n100i}),
	.cin(1'b0),
	.cout(),
	.o(wire_n010O_o));
	defparam
		n010O.sgate_representation = 0,
		n010O.width_a = 5,
		n010O.width_b = 5,
		n010O.width_o = 5;
	oper_add   nillO
	( 
	.a({1'b0, ((nlOi0i8 ^ nlOi0i7) & n01lO), n01Oi, n01Ol, n01OO, n001i, n001l, n001O, n000i}),
	.b({{2{1'b0}}, 1'b1, {6{1'b0}}}),
	.cin(1'b0),
	.cout(),
	.o(wire_nillO_o));
	defparam
		nillO.sgate_representation = 0,
		nillO.width_a = 9,
		nillO.width_b = 9,
		nillO.width_o = 9;
	assign
		fcos_o = {wire_nlili_result[15:0]},
		fsin_o = {wire_niO1O_result[15:0]},
		nlOi0l = (((((((((((((((((~ wire_niO1l_result[15]) & (~ wire_niO1l_result[16])) & (~ wire_niO1l_result[17])) & (~ wire_niO1l_result[18])) & (~ wire_niO1l_result[19])) & (~ wire_niO1l_result[20])) & (~ wire_niO1l_result[21])) & (~ wire_niO1l_result[22])) & (~ wire_niO1l_result[23])) & (~ wire_niO1l_result[24])) & (~ wire_niO1l_result[25])) & (~ wire_niO1l_result[26])) & (~ wire_niO1l_result[27])) & (~ wire_niO1l_result[28])) & (~ wire_niO1l_result[29])) & (~ wire_niO1l_result[30])) & (~ wire_niO1l_result[31])),
		nlOiil = (((((((((((((((((~ wire_niO1i_result[15]) & (~ wire_niO1i_result[16])) & (~ wire_niO1i_result[17])) & (~ wire_niO1i_result[18])) & (~ wire_niO1i_result[19])) & (~ wire_niO1i_result[20])) & (~ wire_niO1i_result[21])) & (~ wire_niO1i_result[22])) & (~ wire_niO1i_result[23])) & (~ wire_niO1i_result[24])) & (~ wire_niO1i_result[25])) & (~ wire_niO1i_result[26])) & (~ wire_niO1i_result[27])) & (~ wire_niO1i_result[28])) & (~ wire_niO1i_result[29])) & (~ wire_niO1i_result[30])) & (~ wire_niO1i_result[31])),
		nlOilO = 1'b1,
		out_valid = n0il;
endmodule //nco
//synopsys translate_on
//VALID FILE
